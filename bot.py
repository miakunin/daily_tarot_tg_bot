import logging
import random
import os
import json
from datetime import datetime, date
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–ª–æ–¥—É –∫–∞—Ä—Ç –∏–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
from tarot_cards import tarot_deck, fortune_templates, get_total_cards, get_cards_by_type

# –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv('BOT_TOKEN')

if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω —É–∫–∞–∑–∞–Ω –≤ .env —Ñ–∞–π–ª–µ")

# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
USER_DATA_FILE = 'data/users_data.json'

# –ö–æ–ª–æ–¥–∞ –¢–∞—Ä–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∏–∑ tarot_cards.py

def draw_random_card():
    """–í—ã—Ç—è–Ω—É—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç—É –∏–∑ –∫–æ–ª–æ–¥—ã"""
    return random.choice(tarot_deck)

def generate_fortune(card):
    """–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ–º"""
    template = random.choice(fortune_templates)
    return template.format(name=card['name'], meaning=card['meaning'])

def load_user_data():
    """–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        with open(USER_DATA_FILE, 'r', encoding='utf-8') as f:
            return json.load(f)
    except FileNotFoundError:
        return {}
    except json.JSONDecodeError:
        logger.error("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        return {}

def save_user_data(data):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ñ–∞–π–ª"""
    try:
        with open(USER_DATA_FILE, 'w', encoding='utf-8') as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")

def can_get_fortune(user_id):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è"""
    user_data = load_user_data()
    user_id_str = str(user_id)
    
    if user_id_str not in user_data:
        return True
    
    last_fortune_date = user_data[user_id_str].get('last_fortune_date')
    if not last_fortune_date:
        return True
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—à—ë–ª –Ω–æ–≤—ã–π –¥–µ–Ω—å
    today = date.today().isoformat()
    return last_fortune_date != today

def update_user_fortune_date(user_id):
    """–û–±–Ω–æ–≤–∏—Ç—å –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_data = load_user_data()
    user_id_str = str(user_id)
    
    if user_id_str not in user_data:
        user_data[user_id_str] = {}
    
    user_data[user_id_str]['last_fortune_date'] = date.today().isoformat()
    user_data[user_id_str]['total_fortunes'] = user_data[user_id_str].get('total_fortunes', 0) + 1
    
    save_user_data(user_data)

def get_user_stats(user_id):
    """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_data = load_user_data()
    user_id_str = str(user_id)
    
    if user_id_str not in user_data:
        return {'total_fortunes': 0, 'last_fortune_date': None}
    
    return user_data[user_id_str]
    """–í—ã—Ç—è–Ω—É—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç—É –∏–∑ –∫–æ–ª–æ–¥—ã"""
    return random.choice(tarot_deck)

def generate_fortune(card):
    """–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ–º"""
    fortunes = [
        f"üîÆ –ö–∞—Ä—Ç–∞ –¥–Ω—è - **{card['name']}**\n\n{card['meaning']}\n\n‚ú® –ü—É—Å—Ç—å —ç—Ç–æ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –æ—Å–≤–µ—Ç–∏—Ç –≤–∞—à –ø—É—Ç—å —Å–µ–≥–æ–¥–Ω—è!",
        f"üåü –ö–∞—Ä—Ç—ã –∑–∞–≥–æ–≤–æ—Ä–∏–ª–∏! **{card['name']}** –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–ª—è –≤–∞—Å —Å–µ–≥–æ–¥–Ω—è.\n\n{card['meaning']}\n\nüôè –ü—Ä–∏–º–∏—Ç–µ –º—É–¥—Ä–æ—Å—Ç—å —ç—Ç–æ–π –∫–∞—Ä—Ç—ã.",
        f"üÉè –í–∞—à–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —á—Ç–µ–Ω–∏–µ –¢–∞—Ä–æ —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç **{card['name']}**\n\n{card['meaning']}\n\nüí´ –ü—É—Å—Ç—å —ç—Ç–æ –ø–æ—Å–ª–∞–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞—à –¥–µ–Ω—å —Å —Ü–µ–ª—å—é.",
        f"‚ú® –í—Å–µ–ª–µ–Ω–Ω–∞—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç **{card['name']}** –≤–∞–º —Å–µ–≥–æ–¥–Ω—è.\n\n{card['meaning']}\n\nüåô –î–æ–≤–µ—Ä—å—Ç–µ—Å—å –ø—É—Ç–∏, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –≤–∞–º–∏."
    ]
    
    return random.choice(fortunes)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_name = update.effective_user.first_name or "–¥—Ä—É–≥"
    card_stats = get_cards_by_type()
    
    welcome_message = f"""
üîÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –ï–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –¢–∞—Ä–æ, {user_name}! üîÆ

‚ú® –Ø –¥–∞—é —Ç–æ–ª—å–∫–æ –û–î–ù–û –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –≤ –¥–µ–Ω—å - –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π –º–∞—Å—Ç–µ—Ä –¢–∞—Ä–æ.

üé¥ **–ú–æ—è –∫–æ–ª–æ–¥–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç {card_stats['total']} –∫–∞—Ä—Ç:**
üîÆ {card_stats['major_arcana']} –°—Ç–∞—Ä—à–∏—Ö –ê—Ä–∫–∞–Ω–æ–≤
‚öîÔ∏è {card_stats['minor_arcana']} –ú–ª–∞–¥—à–∏—Ö –ê—Ä–∫–∞–Ω–æ–≤ (–≤—Å–µ 4 –º–∞—Å—Ç–∏)

–ö–æ–º–∞–Ω–¥—ã:
/fortune - –ü–æ–ª—É—á–∏—Ç—å —Å–≤–æ—ë –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
/card - –¢–æ –∂–µ, —á—Ç–æ –∏ /fortune
/stats - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
/deck - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–æ–¥–µ
/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É

üåü –ì–æ—Ç–æ–≤—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —É–≥–æ—Ç–æ–≤–∏–ª–∏ –≤–∞–º –∫–∞—Ä—Ç—ã —Å–µ–≥–æ–¥–Ω—è? 
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /fortune —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ—ë —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ!

üí´ –ü–æ–º–Ω–∏—Ç–µ: –∫–∞—Ä—Ç—ã –¥–∞—é—Ç –º—É–¥—Ä–æ—Å—Ç—å –ª–∏—à—å —Ä–∞–∑ –≤ –¥–µ–Ω—å.
    """
    
    await update.message.reply_text(welcome_message)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_message = """
üÉè **–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –¢–∞—Ä–æ:**

/fortune - –ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –¢–∞—Ä–æ
/card - –¢–æ –∂–µ, —á—Ç–æ –∏ /fortune
/stats - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É  
/deck - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–æ–¥–µ –∫–∞—Ä—Ç
/start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

‚ú® **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:**
üåô –¢–æ–ª—å–∫–æ –æ–¥–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –≤ –¥–µ–Ω—å –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞
üîÆ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ—Å–ª–∞–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∞—à–∏—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π –∫ –∫–∞—Ä—Ç–∞–º
üé¥ –ü–æ–ª–Ω–∞—è –∫–æ–ª–æ–¥–∞ –∏–∑ 78 –∫–∞—Ä—Ç –¢–∞—Ä–æ

*–ü–æ–º–Ω–∏—Ç–µ: —á—Ç–µ–Ω–∏—è –¢–∞—Ä–æ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã –¥–ª—è —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –∏ —Å–∞–º–æ–∞–Ω–∞–ª–∏–∑–∞.*

üí´ –ü—É—Å—Ç—å –∫–∞—Ä—Ç—ã –Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç –≤–∞—à –ø—É—Ç—å!
    """
    
    await update.message.reply_text(help_message, parse_mode='Markdown')

async def deck_info_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /deck - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–æ–¥–µ"""
    card_stats = get_cards_by_type()
    
    deck_message = f"""
üÉè **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–æ–¥–µ –¢–∞—Ä–æ:**

üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞—Ä—Ç:**
üîÆ –°—Ç–∞—Ä—à–∏–µ –ê—Ä–∫–∞–Ω—ã: {card_stats['major_arcana']} –∫–∞—Ä—Ç
‚öîÔ∏è –ú–ª–∞–¥—à–∏–µ –ê—Ä–∫–∞–Ω—ã: {card_stats['minor_arcana']} –∫–∞—Ä—Ç
üé¥ –í—Å–µ–≥–æ –∫–∞—Ä—Ç –≤ –∫–æ–ª–æ–¥–µ: {card_stats['total']} –∫–∞—Ä—Ç

üåü **–ú–ª–∞–¥—à–∏–µ –ê—Ä–∫–∞–Ω—ã –≤–∫–ª—é—á–∞—é—Ç –≤—Å–µ —á–µ—Ç—ã—Ä–µ –º–∞—Å—Ç–∏:**
üíß –ö—É–±–∫–∏ (–í–æ–¥–∞) - —ç–º–æ—Ü–∏–∏, –æ—Ç–Ω–æ—à–µ–Ω–∏—è, –¥—É—Ö–æ–≤–Ω–æ—Å—Ç—å
üåç –ü–µ–Ω—Ç–∞–∫–ª–∏ (–ó–µ–º–ª—è) - –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–π –º–∏—Ä, —Ñ–∏–Ω–∞–Ω—Å—ã, –∫–∞—Ä—å–µ—Ä–∞  
üí® –ú–µ—á–∏ (–í–æ–∑–¥—É—Ö) - –º—ã—Å–ª–∏, –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã, –æ–±—â–µ–Ω–∏–µ
üî• –ñ–µ–∑–ª—ã (–û–≥–æ–Ω—å) - –¥–µ–π—Å—Ç–≤–∏–µ, —ç–Ω–µ—Ä–≥–∏—è, —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ

‚ú® –ö–∞–∂–¥–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ –∏ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –∏–∑ –ø–æ–ª–Ω–æ–π –∫–æ–ª–æ–¥—ã!
    """
    
    await update.message.reply_text(deck_message, parse_mode='Markdown')

async def stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats"""
    user_id = update.effective_user.id
    user_name = update.effective_user.first_name or "–¥—Ä—É–≥"
    stats = get_user_stats(user_id)
    
    if stats.get('total_fortunes', 0) == 0:
        stats_message = f"""
üìä {user_name}, –≤–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∫–∞ –ø—É—Å—Ç–∞...

üîÆ –í—ã –µ—â—ë –Ω–µ –ø–æ–ª—É—á–∞–ª–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –æ—Ç –∫–∞—Ä—Ç.
‚ú® –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /fortune —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ—ë –ø–µ—Ä–≤–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ!

üí´ –ü—É—Å—Ç—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤ –º–∏—Ä –¢–∞—Ä–æ –Ω–∞—á–Ω—ë—Ç—Å—è!
        """
    else:
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –º–æ–∂–Ω–æ –ª–∏ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è
        can_get_today = can_get_fortune(user_id)
        status = "‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ" if can_get_today else "‚è≥ –ñ–¥–∏—Ç–µ –¥–æ –∑–∞–≤—Ç—Ä–∞"
        
        stats_message = f"""
üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ {user_name}:**

üîÆ –í—Å–µ–≥–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π: {stats.get('total_fortunes', 0)}
üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: {stats.get('last_fortune_date', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}
üåü –°–µ–≥–æ–¥–Ω—è—à–Ω–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: {status}

‚ú® –ö–∞–∂–¥–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –∫–∞—Ä—Ç–∞–º –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç –≤–∞—Å –∫ –º—É–¥—Ä–æ—Å—Ç–∏!
        """
    
    await update.message.reply_text(stats_message, parse_mode='Markdown')

async def fortune(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ /fortune –∏ /card"""
    user_id = update.effective_user.id
    user_name = update.effective_user.first_name or "–¥—Ä—É–≥"
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
    if not can_get_fortune(user_id):
        # –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        stats = get_user_stats(user_id)
        
        waiting_message = f"""
üåô {user_name}, –∫–∞—Ä—Ç—ã —É–∂–µ –æ—Ç–∫—Ä—ã–ª–∏ –≤–∞–º —Å–≤–æ–∏ —Ç–∞–π–Ω—ã —Å–µ–≥–æ–¥–Ω—è...

‚ú® –í—Å–µ–ª–µ–Ω–Ω–∞—è –¥–∞—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –≤ –¥–µ–Ω—å. 
üïê –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ –≥–æ—Ç–æ–≤—è—Ç –≤–∞–º –∑–≤—ë–∑–¥—ã.

üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
üîÆ –í—Å–µ–≥–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π: {stats.get('total_fortunes', 0)}
üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: {stats.get('last_fortune_date', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}

üí´ –ü—É—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞—Å –¥–æ –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–≥–æ —Ä–∞—Å—Å–≤–µ—Ç–∞!
        """
        
        await update.message.reply_text(waiting_message)
        return
    
    # –í—ã—Ç—è–Ω—É—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç—É
    drawn_card = draw_random_card()
    
    # –û–±–Ω–æ–≤–∏—Ç—å –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
    update_user_fortune_date(user_id)
    
    # –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ–º
    fortune_message = generate_fortune(drawn_card)
    
    # –ü–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = get_user_stats(user_id)
    
    # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    full_message = f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üåü\n\n{fortune_message}\n\n"
    
    # –î–æ–±–∞–≤–∏—Ç—å –æ—Å–æ–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
    if stats.get('total_fortunes', 0) == 1:
        full_message += "üéâ –≠—Ç–æ –≤–∞—à–µ –ø–µ—Ä–≤–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –¢–∞—Ä–æ!\n\n"
    else:
        full_message += f"üìä –≠—Ç–æ –≤–∞—à–µ {stats.get('total_fortunes', 0)}-–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ\n\n"
    
    full_message += "üí´ –ü–æ–º–Ω–∏—Ç–µ: –Ω–æ–≤–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –∑–∞–≤—Ç—Ä–∞!"
    
    await update.message.reply_text(full_message, parse_mode='Markdown')

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_name = update.effective_user.first_name or "–¥—Ä—É–≥"
    message = f"""
üîÆ –ü—Ä–∏–≤–µ—Ç, {user_name}! –Ø –≤–∞—à –±–æ—Ç –ï–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –¢–∞—Ä–æ.

‚ú® –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /fortune —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ—ë –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
üìä –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /stats —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
üé¥ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /deck —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ –∫–æ–ª–æ–¥–µ
‚ùì –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥

üåü –ü–æ–º–Ω–∏—Ç–µ: –∫–∞—Ä—Ç—ã –¥–∞—Ä—è—Ç –º—É–¥—Ä–æ—Å—Ç—å —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å!
    """
    
    await update.message.reply_text(message)

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()

    # –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("fortune", fortune))
    application.add_handler(CommandHandler("card", fortune))
    application.add_handler(CommandHandler("stats", stats_command))
    application.add_handler(CommandHandler("deck", deck_info_command))
    
    # –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–æ–¥–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    card_stats = get_cards_by_type()
    
    # –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
    print("üîÆ –ë–æ—Ç –ï–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –¢–∞—Ä–æ –∑–∞–ø—É—â–µ–Ω...")
    print("‚ú® –°–∏—Å—Ç–µ–º–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∞–∫—Ç–∏–≤–Ω–∞: –æ–¥–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –≤ –¥–µ–Ω—å!")
    print(f"üé¥ –ö–æ–ª–æ–¥–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç: {card_stats['total']} –∫–∞—Ä—Ç ({card_stats['major_arcana']} —Å—Ç–∞—Ä—à–∏—Ö + {card_stats['minor_arcana']} –º–ª–∞–¥—à–∏—Ö –∞—Ä–∫–∞–Ω–æ–≤)")
    print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+C —á—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞")
    
    try:
        application.run_polling(allowed_updates=Update.ALL_TYPES)
    except KeyboardInterrupt:
        print("\nüëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
    finally:
        print("üîÆ –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")

if __name__ == '__main__':
    main()
