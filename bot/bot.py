# -*- coding: utf-8 -*-
"""
–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å Telegram –±–æ—Ç–∞
"""

import logging
from telegram.ext import Application, CommandHandler, MessageHandler, filters

from .config import Config
from .services.ai_service import AIService
from .services.user_service import UserService
from .services.fortune_service import FortuneService
from .data.tarot_cards import get_total_cards, get_cards_by_type

# –ò–º–ø–æ—Ä—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
from .handlers.basic import BasicHandlers
from .handlers.fortune import FortuneHandlers
from .handlers.stats import StatsHandlers
from .handlers.ai import AIHandlers
from .handlers.admin import AdminHandlers
from .handlers.messages import MessageHandlers

logger = logging.getLogger(__name__)

class TarotBot:
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å Tarot Fortune Bot"""
    
    def __init__(self, config: Config):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞"""
        self.config = config
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
        self.ai_service = AIService(config)
        self.user_service = UserService(config)
        self.fortune_service = FortuneService(config, self.ai_service, self.user_service)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        self.application = Application.builder().token(config.bot_token).build()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        self._setup_handlers()
        
        logger.info("ü§ñ TarotBot –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    def _setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        # –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        basic_handlers = BasicHandlers(self.config, self.user_service)
        fortune_handlers = FortuneHandlers(self.config, self.fortune_service)
        stats_handlers = StatsHandlers(self.config, self.user_service)
        ai_handlers = AIHandlers(self.config, self.ai_service)
        admin_handlers = AdminHandlers(self.config, self.user_service)
        message_handlers = MessageHandlers(self.config)
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
        self.application.add_handler(CommandHandler("start", basic_handlers.start))
        self.application.add_handler(CommandHandler("help", basic_handlers.help))
        
        # –ö–æ–º–∞–Ω–¥—ã –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π
        self.application.add_handler(CommandHandler("fortune", fortune_handlers.fortune))
        self.application.add_handler(CommandHandler("card", fortune_handlers.fortune))
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        self.application.add_handler(CommandHandler("stats", stats_handlers.stats))
        self.application.add_handler(CommandHandler("deck", stats_handlers.deck_info))
        
        # AI –∫–æ–º–∞–Ω–¥—ã
        self.application.add_handler(CommandHandler("ai", ai_handlers.toggle))
        self.application.add_handler(CommandHandler("status", ai_handlers.status))
        
        # –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã
        self.application.add_handler(CommandHandler("reset", admin_handlers.reset))
        self.application.add_handler(CommandHandler("adminstats", admin_handlers.admin_stats))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        self.application.add_handler(
            MessageHandler(filters.TEXT & ~filters.COMMAND, message_handlers.handle_text)
        )
        
        logger.info("üìã –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø—É—Å–∫–µ
        self._print_startup_info()
        
        try:
            # –ó–∞–ø—É—Å–∫ polling
            self.application.run_polling(allowed_updates=['message', 'callback_query'])
        except KeyboardInterrupt:
            logger.info("üëã –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")
            raise
        finally:
            logger.info("üîÆ –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")
    
    def _print_startup_info(self):
        """–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"""
        card_stats = get_cards_by_type()
        status = self.config.get_status_info()
        
        ai_status = "‚úÖ –¥–æ—Å—Ç—É–ø–Ω—ã (–ë–ï–°–ü–õ–ê–¢–ù–û)" if status['ai_enabled'] else "‚ùå –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
        admin_status = f"‚úÖ –Ω–∞—Å—Ç—Ä–æ–µ–Ω ({self.config.admin_id})" if status['admin_configured'] else "‚ùå –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        
        print("üîÆ –ë–æ—Ç –ï–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –¢–∞—Ä–æ –∑–∞–ø—É—â–µ–Ω...")
        print("‚ú® –°–∏—Å—Ç–µ–º–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∞–∫—Ç–∏–≤–Ω–∞: –æ–¥–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –≤ –¥–µ–Ω—å!")
        print(f"üé¥ –ö–æ–ª–æ–¥–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç: {card_stats['total']} –∫–∞—Ä—Ç ({card_stats['major_arcana']} —Å—Ç–∞—Ä—à–∏—Ö + {card_stats['minor_arcana']} –º–ª–∞–¥—à–∏—Ö)")
        print(f"ü§ñ Gemini AI —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è: {ai_status}")
        print(f"üëë –ê–¥–º–∏–Ω –¥–æ—Å—Ç—É–ø: {admin_status}")
        print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+C —á—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞")
