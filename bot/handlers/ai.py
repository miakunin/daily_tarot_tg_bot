# -*- coding: utf-8 -*-
"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ AI –∫–æ–º–∞–Ω–¥ (/ai, /status)
"""

import logging
from telegram import Update
from telegram.ext import ContextTypes

from ..config import Config
from ..services.ai_service import AIService

logger = logging.getLogger(__name__)

class AIHandlers:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ AI –∫–æ–º–∞–Ω–¥"""
    
    def __init__(self, config: Config, ai_service: AIService):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
        self.config = config
        self.ai_service = ai_service
    
    async def toggle(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /ai - –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π"""
        user_id = update.effective_user.id
        
        try:
            if not self.ai_service.ai_available:
                await update.message.reply_text(
                    "‚ùå AI —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.\n\n"
                    "–î–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –¥–æ–±–∞–≤—å—Ç–µ GEMINI_API_KEY –≤ .env —Ñ–∞–π–ª –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install google-generativeai"
                )
                return
            
            # –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º
            new_state = self.ai_service.toggle_ai()
            
            status = "–≤–∫–ª—é—á–µ–Ω—ã ü§ñ" if new_state else "–≤—ã–∫–ª—é—á–µ–Ω—ã üìö"
            mode = "–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ Gemini —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è" if new_state else "–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –∫–∞—Ä—Ç"
            
            toggle_message = f"""
üîÑ **–†–µ–∂–∏–º —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π –∏–∑–º–µ–Ω—ë–Ω!**

‚ú® AI —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è: {status}
üéØ –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: {mode}

ü§ñ **Gemini —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è:** –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ, –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ (–ë–ï–°–ü–õ–ê–¢–ù–û!)
üìö **–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ:** –¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞—Ä—Ç –¢–∞—Ä–æ

üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /ai —á—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º.
            """
            
            await update.message.reply_text(toggle_message, parse_mode='Markdown')
            logger.info(f"üîÑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–µ—Ä–µ–∫–ª—é—á–∏–ª AI: {status}")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è AI –¥–ª—è {user_id}: {e}")
            await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π.")
    
    async def status(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /status - —Å—Ç–∞—Ç—É—Å AI —Å–∏—Å—Ç–µ–º—ã"""
        user_id = update.effective_user.id
        
        try:
            if not self.ai_service.ai_available:
                if not hasattr(self.ai_service, '__class__'): # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ Gemini –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
                    status_message = """
‚ùå **–°—Ç–∞—Ç—É—Å AI: –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω**

üì¶ Google Generative AI –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
üí° –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏: `pip install --upgrade google-generativeai`
üîÑ –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è –∫–∞—Ä—Ç
                    """
                else:
                    status_message = """
‚ö†Ô∏è **–°—Ç–∞—Ç—É—Å AI: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω**

üîë GEMINI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ
üåê –ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á –ë–ï–°–ü–õ–ê–¢–ù–û –Ω–∞: https://makersuite.google.com/app/apikey
üîÑ –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è –∫–∞—Ä—Ç
                    """
            else:
                # –ü–æ–ø—Ä–æ–±—É–µ–º —Å–¥–µ–ª–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
                test_result = await self.ai_service.generate_interpretation("–î—É—Ä–∞–∫", "—Ç–µ—Å—Ç")
                
                if test_result:
                    # –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
                    available_models = await self.ai_service.get_available_models()
                    models_text = "\n".join([f"  ‚Ä¢ {model}" for model in available_models[:5]])  # –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–µ 5
                    if len(available_models) > 5:
                        models_text += f"\n  ‚Ä¢ ... –∏ –µ—â—ë {len(available_models) - 5} –º–æ–¥–µ–ª–µ–π"
                    
                    status_message = f"""
‚úÖ **–°—Ç–∞—Ç—É—Å AI: –†–∞–±–æ—Ç–∞–µ—Ç**

ü§ñ Google Gemini API –ø–æ–¥–∫–ª—é—á—ë–Ω –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç
üîÆ AI —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è: {"–≤–∫–ª—é—á–µ–Ω—ã" if self.ai_service.ai_enabled else "–≤—ã–∫–ª—é—á–µ–Ω—ã"}
üéØ –ê–∫—Ç–∏–≤–Ω–∞—è –º–æ–¥–µ–ª—å: Gemini-1.5-Flash (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)
‚ú® –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã
üí∞ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ª–∏–º–∏—Ç: 60 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É

üìã **–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:**
{models_text if models_text else "  ‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞..."}

üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /ai —á—Ç–æ–±—ã –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º
                    """
                else:
                    status_message = """
‚ùå **–°—Ç–∞—Ç—É—Å AI: –û—à–∏–±–∫–∞**

üîë API –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã:
‚Ä¢ –ú–æ–¥–µ–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–ª–∏
‚Ä¢ –û–±–Ω–æ–≤–∏—Ç–µ –±–∏–±–ª–∏–æ—Ç–µ–∫—É: pip install --upgrade google-generativeai
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ (60/–º–∏–Ω)
‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é

üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è
üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–ª—é—á –Ω–∞: https://makersuite.google.com/
                    """
            
            await update.message.reply_text(status_message, parse_mode='Markdown')
            logger.info(f"üîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø—Ä–æ–≤–µ—Ä–∏–ª —Å—Ç–∞—Ç—É—Å AI")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ AI –¥–ª—è {user_id}: {e}")
            await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ AI —Å–∏—Å—Ç–µ–º—ã.")
