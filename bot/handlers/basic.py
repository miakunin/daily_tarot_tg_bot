# -*- coding: utf-8 -*-
"""
–ë–∞–∑–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ (/start, /help)
"""

import logging
from telegram import Update
from telegram.ext import ContextTypes

from ..config import Config
from ..services.user_service import UserService
from ..data.tarot_cards import get_cards_by_type

logger = logging.getLogger(__name__)

class BasicHandlers:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥"""
    
    def __init__(self, config: Config, user_service: UserService):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
        self.config = config
        self.user_service = user_service
    
    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        user = update.effective_user
        user_name = user.first_name or "–¥—Ä—É–≥"
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.user_service.get_user(user.id, user.first_name)
        
        card_stats = get_cards_by_type()
        ai_status = "ü§ñ Gemini AI —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è" if self.config.get_status_info()['ai_enabled'] else "üìö –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ"
        
        welcome_message = f"""
üîÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –ï–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –¢–∞—Ä–æ, {user_name}! üîÆ

‚ú® –Ø –¥–∞—é —Ç–æ–ª—å–∫–æ –û–î–ù–û –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –≤ –¥–µ–Ω—å - –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π –º–∞—Å—Ç–µ—Ä –¢–∞—Ä–æ.

üé¥ **–ú–æ—è –∫–æ–ª–æ–¥–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç {card_stats['total']} –∫–∞—Ä—Ç:**
üîÆ {card_stats['major_arcana']} –°—Ç–∞—Ä—à–∏—Ö –ê—Ä–∫–∞–Ω–æ–≤
‚öîÔ∏è {card_stats['minor_arcana']} –ú–ª–∞–¥—à–∏—Ö –ê—Ä–∫–∞–Ω–æ–≤ (–≤—Å–µ 4 –º–∞—Å—Ç–∏)

üß† **–†–µ–∂–∏–º —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π:** {ai_status} üí∞ –ë–ï–°–ü–õ–ê–¢–ù–û!

**–ö–æ–º–∞–Ω–¥—ã:**
/fortune - –ü–æ–ª—É—á–∏—Ç—å —Å–≤–æ—ë –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
/card - –¢–æ –∂–µ, —á—Ç–æ –∏ /fortune
/stats - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
/deck - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–æ–¥–µ
/ai - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π
/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É

üåü –ì–æ—Ç–æ–≤—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —É–≥–æ—Ç–æ–≤–∏–ª–∏ –≤–∞–º –∫–∞—Ä—Ç—ã —Å–µ–≥–æ–¥–Ω—è? 
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /fortune —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ—ë —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ!

üí´ –ü–æ–º–Ω–∏—Ç–µ: –∫–∞—Ä—Ç—ã –¥–∞—é—Ç –º—É–¥—Ä–æ—Å—Ç—å –ª–∏—à—å —Ä–∞–∑ –≤ –¥–µ–Ω—å.
        """
        
        await update.message.reply_text(welcome_message)
        logger.info(f"üëã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –≤—ã–ø–æ–ª–Ω–∏–ª /start")
    
    async def help(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        status = self.config.get_status_info()
        ai_status = "ü§ñ –≤–∫–ª—é—á–µ–Ω—ã" if status['ai_enabled'] else "üìö –≤—ã–∫–ª—é—á–µ–Ω—ã"
        ai_availability = "" if status['ai_available'] else "\n‚ùå AI –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã (–Ω–µ—Ç Gemini API –∫–ª—é—á–∞)"
        
        help_message = f"""
üÉè **–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –¢–∞—Ä–æ:**

**–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
/fortune - –ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –¢–∞—Ä–æ
/card - –¢–æ –∂–µ, —á—Ç–æ –∏ /fortune
/stats - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É  
/deck - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–æ–¥–µ –∫–∞—Ä—Ç

**AI –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:**
/ai - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π (AI/–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ)
/status - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å AI —Å–∏—Å—Ç–µ–º—ã

**–ü–æ–º–æ—â—å:**
/start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

‚ú® **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:**
üåô –¢–æ–ª—å–∫–æ –æ–¥–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –≤ –¥–µ–Ω—å –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞
üîÆ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ—Å–ª–∞–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∞—à–∏—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π –∫ –∫–∞—Ä—Ç–∞–º
üé¥ –ü–æ–ª–Ω–∞—è –∫–æ–ª–æ–¥–∞ –∏–∑ 78 –∫–∞—Ä—Ç –¢–∞—Ä–æ
ü§ñ Gemini AI —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è: {ai_status} (–ë–ï–°–ü–õ–ê–¢–ù–û!){ai_availability}

*–ü–æ–º–Ω–∏—Ç–µ: —á—Ç–µ–Ω–∏—è –¢–∞—Ä–æ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã –¥–ª—è —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –∏ —Å–∞–º–æ–∞–Ω–∞–ª–∏–∑–∞.*

üí´ –ü—É—Å—Ç—å –∫–∞—Ä—Ç—ã –Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç –≤–∞—à –ø—É—Ç—å!
        """
        
        await update.message.reply_text(help_message, parse_mode='Markdown')
        logger.info(f"‚ùì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–º–æ—â—å")
