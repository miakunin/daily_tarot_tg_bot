# -*- coding: utf-8 -*-
"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π (/fortune, /card)
"""

import logging
from telegram import Update
from telegram.ext import ContextTypes

from ..config import Config
from ..services.fortune_service import FortuneService

logger = logging.getLogger(__name__)

class FortuneHandlers:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π"""
    
    def __init__(self, config: Config, fortune_service: FortuneService):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
        self.config = config
        self.fortune_service = fortune_service
    
    async def fortune(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ /fortune –∏ /card"""
        user = update.effective_user
        user_name = user.first_name or "–¥—Ä—É–≥"
        
        try:
            # –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–ø–µ—á–∞—Ç–∞–µ—Ç..." –¥–ª—è AI –∑–∞–ø—Ä–æ—Å–æ–≤
            await update.message.reply_chat_action('typing')
            
            # –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
            result = await self.fortune_service.get_daily_fortune(user.id, user.first_name)
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç
            response_message = self.fortune_service.format_fortune_response(user_name, result)
            
            await update.message.reply_text(response_message, parse_mode='Markdown')
            
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
            if result['success']:
                card_name = result['card'].name
                ai_used = "AI" if result['ai_used'] else "–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ"
                logger.info(f"üîÆ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: {card_name} ({ai_used})")
            else:
                logger.info(f"‚è≥ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} —É–∂–µ –ø–æ–ª—É—á–∞–ª –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è")
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –¥–ª—è {user.id}: {e}")
            
            error_message = """
‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è.

üîÑ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.
üìû –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä–∏—Ç—Å—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏.
            """
            
            await update.message.reply_text(error_message)
