# -*- coding: utf-8 -*-
"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
"""

import logging
from telegram import Update
from telegram.ext import ContextTypes

from ..config import Config

logger = logging.getLogger(__name__)

class MessageHandlers:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    
    def __init__(self, config: Config):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞"""
        self.config = config
    
    async def handle_text(self, update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        user = update.effective_user
        user_name = user.first_name or "–¥—Ä—É–≥"
        message_text = update.message.text
        
        try:
            # –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç–∞—Ç—É—Å AI –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
            status = self.config.get_status_info()
            ai_status = "ü§ñ Gemini AI" if status['ai_enabled'] else "üìö –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ"
            
            # –ë–∞–∑–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
            help_message = f"""
üîÆ –ü—Ä–∏–≤–µ—Ç, {user_name}! –Ø –≤–∞—à –±–æ—Ç –ï–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –¢–∞—Ä–æ.

**–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
‚ú® /fortune - –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ—ë –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
üìä /stats - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
üé¥ /deck - —É–∑–Ω–∞—Ç—å –æ –∫–æ–ª–æ–¥–µ –∫–∞—Ä—Ç

**AI –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:**
ü§ñ /ai - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–π
üîß /status - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å AI —Å–∏—Å—Ç–µ–º—ã

**–ü–æ–º–æ—â—å:**
‚ùì /help - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã

üß† **–¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º:** {ai_status} —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è (–ë–ï–°–ü–õ–ê–¢–ù–û!)
üåü **–ü–æ–º–Ω–∏—Ç–µ:** –∫–∞—Ä—Ç—ã –¥–∞—Ä—è—Ç –º—É–¥—Ä–æ—Å—Ç—å —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å!

üí´ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã—à–µ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º.
            """
            
            await update.message.reply_text(help_message, parse_mode='Markdown')
            
            logger.info(f"üí¨ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message_text[:50]}...")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç {user.id}: {e}")
            
            # Fallback —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            fallback_message = """
üîÆ –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¢–∞—Ä–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π.

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /fortune –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –∏–ª–∏ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.

‚ú® –ü—É—Å—Ç—å –∫–∞—Ä—Ç—ã –Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç –≤–∞—à –ø—É—Ç—å!
            """
            
            await update.message.reply_text(fallback_message)
