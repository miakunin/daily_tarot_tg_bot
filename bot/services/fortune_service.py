# -*- coding: utf-8 -*-
"""
–°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è–º–∏
"""

import logging
import random
from typing import Optional

from ..config import Config
from ..models.card import TarotCard
from ..data.tarot_cards import tarot_deck, fortune_templates
from .ai_service import AIService
from .user_service import UserService

logger = logging.getLogger(__name__)

class FortuneService:
    """–°–µ—Ä–≤–∏—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π"""
    
    def __init__(self, config: Config, ai_service: AIService, user_service: UserService):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π"""
        self.config = config
        self.ai_service = ai_service
        self.user_service = user_service
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç –≤ –æ–±—ä–µ–∫—Ç—ã TarotCard
        self.cards = [TarotCard(name=card['name'], meaning=card['meaning']) for card in tarot_deck]
        
        logger.info(f"üé¥ FortuneService –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å {len(self.cards)} –∫–∞—Ä—Ç–∞–º–∏")
    
    def draw_random_card(self) -> TarotCard:
        """–í—ã—Ç—è–Ω—É—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç—É –∏–∑ –∫–æ–ª–æ–¥—ã"""
        return random.choice(self.cards)
    
    async def generate_fortune_message(self, card: TarotCard, user_name: Optional[str] = None) -> str:
        """–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ–º"""
        # –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–æ–ª—É—á–∏—Ç—å AI —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ
        if self.ai_service.ai_enabled:
            ai_interpretation = await self.ai_service.generate_interpretation(card.name, user_name)
            
            if ai_interpretation:
                return self._format_ai_fortune(card, ai_interpretation)
        
        # Fallback –Ω–∞ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ
        return self._format_classic_fortune(card)
    
    def _format_ai_fortune(self, card: TarotCard, ai_interpretation: str) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å AI –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ"""
        ai_templates = [
            "üîÆ –ö–∞—Ä—Ç–∞ –¥–Ω—è - **{name}**\n\n{ai_meaning}\n\nüí´ –ü—É—Å—Ç—å —ç—Ç–æ –ø–æ—Å–ª–∞–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞—Å —Å–µ–≥–æ–¥–Ω—è!",
            "üåü –í—Å–µ–ª–µ–Ω–Ω–∞—è –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç **{name}** –¥–ª—è –≤–∞—Å —Å–µ–≥–æ–¥–Ω—è.\n\n{ai_meaning}\n\nüôè –î–æ–≤–µ—Ä—å—Ç–µ—Å—å –º—É–¥—Ä–æ—Å—Ç–∏ –∫–∞—Ä—Ç.",
            "‚ú® –ö–∞—Ä—Ç—ã –∑–∞–≥–æ–≤–æ—Ä–∏–ª–∏! **{name}** –Ω–µ—Å—ë—Ç –æ—Å–æ–±–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ.\n\n{ai_meaning}\n\nüåô –ü—Ä–∏–º–∏—Ç–µ —ç—Ç–æ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —Å –æ—Ç–∫—Ä—ã—Ç—ã–º —Å–µ—Ä–¥—Ü–µ–º."
        ]
        
        template = random.choice(ai_templates)
        return template.format(name=card.name, ai_meaning=ai_interpretation)
    
    def _format_classic_fortune(self, card: TarotCard) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ"""
        template = random.choice(fortune_templates)
        return template.format(name=card.name, meaning=card.meaning)
    
    async def get_daily_fortune(self, user_id: int, first_name: Optional[str] = None) -> dict:
        """–ü–æ–ª—É—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
        if not self.user_service.can_get_fortune(user_id):
            user_stats = self.user_service.get_user_stats(user_id)
            return {
                'success': False,
                'type': 'already_used',
                'stats': user_stats
            }
        
        # –í—ã—Ç—è–Ω—É—Ç—å –∫–∞—Ä—Ç—É
        card = self.draw_random_card()
        
        # –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.user_service.update_fortune_date(user_id, first_name)
        
        # –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
        fortune_message = await self.generate_fortune_message(card, first_name)
        
        # –ü–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        updated_stats = self.user_service.get_user_stats(user_id)
        
        return {
            'success': True,
            'type': 'new_fortune',
            'card': card,
            'message': fortune_message,
            'stats': updated_stats,
            'ai_used': self.ai_service.ai_enabled
        }
    
    def get_waiting_message(self, user_name: str, stats: dict) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è"""
        return f"""
üåô {user_name}, –∫–∞—Ä—Ç—ã —É–∂–µ –æ—Ç–∫—Ä—ã–ª–∏ –≤–∞–º —Å–≤–æ–∏ —Ç–∞–π–Ω—ã —Å–µ–≥–æ–¥–Ω—è...

‚ú® –í—Å–µ–ª–µ–Ω–Ω–∞—è –¥–∞—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –≤ –¥–µ–Ω—å. 
üïê –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∑–∞–≤—Ç—Ä–∞, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ –≥–æ—Ç–æ–≤—è—Ç –≤–∞–º –∑–≤—ë–∑–¥—ã.

üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
üîÆ –í—Å–µ–≥–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π: {stats.get('total_fortunes', 0)}
üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: {stats.get('last_fortune_date', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}

üí´ –ü—É—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞—Å –¥–æ –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–≥–æ —Ä–∞—Å—Å–≤–µ—Ç–∞!
        """
    
    def format_fortune_response(self, user_name: str, result: dict) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç–≤–µ—Ç —Å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ–º"""
        if not result['success']:
            return self.get_waiting_message(user_name, result['stats'])
        
        stats = result['stats']
        message = result['message']
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è
        source_info = "ü§ñ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ Gemini —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ" if result['ai_used'] else "üìö –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏–µ"
        
        # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        full_message = f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üåü\n\n{message}\n\n"
        
        # –î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π
        total = stats.get('total_fortunes', 0)
        if total == 1:
            full_message += "üéâ –≠—Ç–æ –≤–∞—à–µ –ø–µ—Ä–≤–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –¢–∞—Ä–æ!\n\n"
        else:
            full_message += f"üìä –≠—Ç–æ –≤–∞—à–µ {total}-–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ\n\n"
        
        full_message += f"{source_info}\nüí´ –ü–æ–º–Ω–∏—Ç–µ: –Ω–æ–≤–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –∑–∞–≤—Ç—Ä–∞!"
        
        return full_message
